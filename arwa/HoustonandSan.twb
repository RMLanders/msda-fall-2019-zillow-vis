<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook original-version='18.1' source-build='2019.2.3 (20192.19.0818.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Output 2 - Copy' inline='true' name='federated.1yerw081sv9hua1d1eyvg074dmxp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output 2 - Copy' name='textscan.0pycl5o168ejca19vbgah1p05chh'>
            <connection class='textscan' directory='C:/Users/Arwan/OneDrive/Documents/zillow' filename='Output 2 - Copy.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0pycl5o168ejca19vbgah1p05chh' name='Output 2 - Copy.csv' table='[Output 2 - Copy#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='year- month' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='RegionName' ordinal='2' />
            <column datatype='string' name='Metro' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='SizeRank' ordinal='5' />
            <column datatype='real' name='Percent Reduction' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year- month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year- month]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>year- month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metro]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>Metro</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SizeRank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SizeRank]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>SizeRank</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent Reduction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent Reduction]</local-name>
            <parent-name>[Output 2 - Copy.csv]</parent-name>
            <remote-alias>Percent Reduction</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Percent Reduction]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Size Rank' datatype='integer' name='[SizeRank]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Year- Month' datatype='string' name='[year- month]' role='dimension' type='nominal' />
      <column-instance column='[Percent Reduction]' derivation='Avg' name='[avg:Percent Reduction:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yerw081sv9hua1d1eyvg074dmxp].[avg:Percent Reduction:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.027ai2e07k0alt1b5llqv1to2sxj'>
        <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
        <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='SA-HOU' inline='true' name='federated.13v8wgc0pe7nk917gw17i0dp6xxy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SA-HOU' name='textscan.0t4eop902tjbs1186la3j176fw35'>
            <connection class='textscan' directory='C:/Users/Arwan/OneDrive/Documents/zillow/msda-fall-2019-zillow-vis/arwa' filename='SA-HOU.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0t4eop902tjbs1186la3j176fw35' name='SA-HOU.csv' table='[SA-HOU#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='YearAndMonth' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='RegionName' ordinal='2' />
            <column datatype='string' name='Metro' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='SizeRank' ordinal='5' />
            <column datatype='real' name='Price Reduction' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearAndMonth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YearAndMonth]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>YearAndMonth</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metro]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>Metro</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SizeRank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SizeRank]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>SizeRank</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Reduction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price Reduction]</local-name>
            <parent-name>[SA-HOU.csv]</parent-name>
            <remote-alias>Price Reduction</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Price Reduction]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Size Rank' datatype='integer' name='[SizeRank]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Year And Month' datatype='string' name='[YearAndMonth]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Price Reduction]' derivation='Avg' name='[avg:Price Reduction:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.027ai2e07k0alt1b5llqv1to2sxj].[attr:value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13v8wgc0pe7nk917gw17i0dp6xxy]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.027ai2e07k0alt1b5llqv1to2sxj].[sum:value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.027ai2e07k0alt1b5llqv1to2sxj'>
        <column-instance column='[value]' derivation='Attribute' name='[attr:value:qk]' pivot='key' type='quantitative' />
        <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
        <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
        <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1p3umxy1j7arc11e85dwi0nh65u4'>
        <column datatype='real' name='[Price]' role='measure' type='quantitative' />
        <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='30-year-fixed-monthly-mortgage-rate' inline='true' name='federated.027ai2e07k0alt1b5llqv1to2sxj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='30-year-fixed-monthly-mortgage-rate' name='textscan.0hxtrw71pshppm1ffvu3x1p3xb2t'>
            <connection class='textscan' directory='C:/Users/Arwan/OneDrive/Documents/zillow' filename='30-year-fixed-monthly-mortgage-rate.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0hxtrw71pshppm1ffvu3x1p3xb2t' name='30-year-fixed-monthly-mortgage-rate.csv' table='[30-year-fixed-monthly-mortgage-rate#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='value' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[30-year-fixed-monthly-mortgage-rate.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[30-year-fixed-monthly-mortgage-rate.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[30-year-fixed-monthly-mortgage-rate.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.48' measure-ordering='alphabetic' measure-percentage='0.52' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (CrudeOilPriceIn)' inline='true' name='federated.1p3umxy1j7arc11e85dwi0nh65u4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CrudeOilPriceIn' name='excel-direct.0h6vmzm1n49sqq16v2orn1aq8byp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Arwan/OneDrive/Documents/zillow/msda-fall-2019-zillow-vis/arwa/CrudeOilPriceIn.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0h6vmzm1n49sqq16v2orn1aq8byp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C182:no:A1:C182:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Price' ordinal='1' />
            <column datatype='real' name='Change' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Change]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Change</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C182:no:A1:C182:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.459936' measure-ordering='alphabetic' measure-percentage='0.540064' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='1Bedroom_MRP' inline='true' name='federated.03dci8m1lrytms1e8pwpr0mq0k57' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='1Bedroom_MRP' name='textscan.1321of406gsnep14dic3605bhm59'>
            <connection class='textscan' directory='C:/Users/Arwan/OneDrive/Documents/zillow/msda-fall-2019-zillow-vis/arwa' filename='1Bedroom_MRP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1321of406gsnep14dic3605bhm59' name='1Bedroom_MRP.csv' table='[1Bedroom_MRP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='YearMonth' ordinal='0' />
            <column datatype='string' name='RegionName' ordinal='1' />
            <column datatype='integer' name='SizeRank' ordinal='2' />
            <column datatype='real' name='1BValues' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[1Bedroom_MRP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearMonth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YearMonth]</local-name>
            <parent-name>[1Bedroom_MRP.csv]</parent-name>
            <remote-alias>YearMonth</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[1Bedroom_MRP.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SizeRank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SizeRank]</local-name>
            <parent-name>[1Bedroom_MRP.csv]</parent-name>
            <remote-alias>SizeRank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1BValues</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1BValues]</local-name>
            <parent-name>[1Bedroom_MRP.csv]</parent-name>
            <remote-alias>1BValues</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Size Rank' datatype='integer' name='[SizeRank]' role='measure' type='quantitative' />
      <column caption='Year Month' datatype='string' name='[YearMonth]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.477273' measure-ordering='alphabetic' measure-percentage='0.522727' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='2Bedroom_MRP' inline='true' name='federated.03qeqvm1j1sp9u16y9qw00xt5v9u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2Bedroom_MRP' name='textscan.03czdis0ul9lip19jjllz0q8eifb'>
            <connection class='textscan' directory='C:/Users/Arwan/OneDrive/Documents/zillow/msda-fall-2019-zillow-vis/arwa' filename='2Bedroom_MRP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.03czdis0ul9lip19jjllz0q8eifb' name='2Bedroom_MRP.csv' table='[2Bedroom_MRP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='YearMonth' ordinal='0' />
            <column datatype='string' name='RegionName' ordinal='1' />
            <column datatype='integer' name='SizeRank' ordinal='2' />
            <column datatype='real' name='2BValues' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2Bedroom_MRP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearMonth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YearMonth]</local-name>
            <parent-name>[2Bedroom_MRP.csv]</parent-name>
            <remote-alias>YearMonth</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[2Bedroom_MRP.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SizeRank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SizeRank]</local-name>
            <parent-name>[2Bedroom_MRP.csv]</parent-name>
            <remote-alias>SizeRank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2BValues</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2BValues]</local-name>
            <parent-name>[2Bedroom_MRP.csv]</parent-name>
            <remote-alias>2BValues</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Size Rank' datatype='integer' name='[SizeRank]' role='measure' type='quantitative' />
      <column caption='Year Month' datatype='string' name='[YearMonth]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.479021' measure-ordering='alphabetic' measure-percentage='0.520979' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='3Bedroom_MRP' inline='true' name='federated.1nnyyy201afyvc1gt2e570fhm2ko' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='3Bedroom_MRP' name='textscan.1o45vku1uo8c6n17unw8c1o8gs5t'>
            <connection class='textscan' directory='C:/Users/Arwan/OneDrive/Documents/zillow/msda-fall-2019-zillow-vis/arwa' filename='3Bedroom_MRP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1o45vku1uo8c6n17unw8c1o8gs5t' name='3Bedroom_MRP.csv' table='[3Bedroom_MRP#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='YearMonth' ordinal='0' />
            <column datatype='string' name='RegionName' ordinal='1' />
            <column datatype='integer' name='SizeRank' ordinal='2' />
            <column datatype='real' name='3BValues' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[3Bedroom_MRP.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YearMonth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YearMonth]</local-name>
            <parent-name>[3Bedroom_MRP.csv]</parent-name>
            <remote-alias>YearMonth</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[3Bedroom_MRP.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SizeRank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SizeRank]</local-name>
            <parent-name>[3Bedroom_MRP.csv]</parent-name>
            <remote-alias>SizeRank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3BValues</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3BValues]</local-name>
            <parent-name>[3Bedroom_MRP.csv]</parent-name>
            <remote-alias>3BValues</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Size Rank' datatype='integer' name='[SizeRank]' role='measure' type='quantitative' />
      <column caption='Year Month' datatype='string' name='[YearMonth]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.477273' measure-ordering='alphabetic' measure-percentage='0.522727' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.027ai2e07k0alt1b5llqv1to2sxj'>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.13v8wgc0pe7nk917gw17i0dp6xxy'>
      <column caption='Year And Month' datatype='string' name='[YearAndMonth]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[YearAndMonth]' derivation='None' name='[none:YearAndMonth:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1p3umxy1j7arc11e85dwi0nh65u4'>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1yerw081sv9hua1d1eyvg074dmxp'>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.13v8wgc0pe7nk917gw17i0dp6xxy' target='federated.027ai2e07k0alt1b5llqv1to2sxj'>
      <column-mapping>
        <map key='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:ok]' value='[federated.027ai2e07k0alt1b5llqv1to2sxj].[yr:date:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.027ai2e07k0alt1b5llqv1to2sxj' target='federated.1yerw081sv9hua1d1eyvg074dmxp'>
      <column-mapping>
        <map key='[federated.027ai2e07k0alt1b5llqv1to2sxj].[yr:date:ok]' value='[federated.1yerw081sv9hua1d1eyvg074dmxp].[none:Year:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.13v8wgc0pe7nk917gw17i0dp6xxy' target='federated.1p3umxy1j7arc11e85dwi0nh65u4'>
      <column-mapping>
        <map key='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:ok]' value='[federated.1p3umxy1j7arc11e85dwi0nh65u4].[yr:Date:ok]' />
        <map key='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:YearAndMonth:nk]' value='[federated.1p3umxy1j7arc11e85dwi0nh65u4].[mn:Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='PCvsAPR'>
      <table>
        <view>
          <datasources>
            <datasource caption='SA-HOU' name='federated.13v8wgc0pe7nk917gw17i0dp6xxy' />
            <datasource caption='30-year-fixed-monthly-mortgage-rate' name='federated.027ai2e07k0alt1b5llqv1to2sxj' />
            <datasource caption='Output 2 - Copy' name='federated.1yerw081sv9hua1d1eyvg074dmxp' />
          </datasources>
          <datasource-dependencies datasource='federated.027ai2e07k0alt1b5llqv1to2sxj'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13v8wgc0pe7nk917gw17i0dp6xxy'>
            <column datatype='string' name='[Metro]' role='dimension' type='nominal' />
            <column datatype='real' name='[Price Reduction]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price Reduction]' derivation='Avg' name='[avg:Price Reduction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metro]' derivation='None' name='[none:Metro:nk]' pivot='key' type='nominal' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yerw081sv9hua1d1eyvg074dmxp'>
            <column datatype='string' name='[Metro]' role='dimension' type='nominal' />
            <column-instance column='[Metro]' derivation='None' name='[none:Metro:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]'>
            <groupfilter function='level-members' level='[none:Metro:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]'>
            <groupfilter function='level-members' level='[none:RegionName:nk]' />
          </filter>
          <slices>
            <column>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]</column>
            <column>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]' />
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]' />
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]' />
              <lod column='[federated.027ai2e07k0alt1b5llqv1to2sxj].[sum:value:qk]' />
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk] + [federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk])</rows>
        <cols>([federated.1yerw081sv9hua1d1eyvg074dmxp].[none:Metro:nk] * [federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{9A0F8F7D-C2C2-4010-B986-B997B7BD1446}' />
    </worksheet>
    <worksheet name='PCvsAPRRegion'>
      <table>
        <view>
          <datasources>
            <datasource caption='SA-HOU' name='federated.13v8wgc0pe7nk917gw17i0dp6xxy' />
            <datasource caption='30-year-fixed-monthly-mortgage-rate' name='federated.027ai2e07k0alt1b5llqv1to2sxj' />
          </datasources>
          <datasource-dependencies datasource='federated.027ai2e07k0alt1b5llqv1to2sxj'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13v8wgc0pe7nk917gw17i0dp6xxy'>
            <column datatype='string' name='[Metro]' role='dimension' type='nominal' />
            <column datatype='real' name='[Price Reduction]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price Reduction]' derivation='Avg' name='[avg:Price Reduction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metro]' derivation='None' name='[none:Metro:nk]' pivot='key' type='nominal' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='390' />
                <format attr='maxwidth' value='390' />
                <format attr='minheight' value='549' />
                <format attr='maxheight' value='549' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk] + [federated.027ai2e07k0alt1b5llqv1to2sxj].[avg:value:qk])</rows>
        <cols>(([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk] / [federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]) * [federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{99829F4B-789F-437E-B5B9-ECCFD25311E8}' />
    </worksheet>
    <worksheet name='PCvsCRL'>
      <table>
        <view>
          <datasources>
            <datasource caption='SA-HOU' name='federated.13v8wgc0pe7nk917gw17i0dp6xxy' />
            <datasource caption='Sheet1 (CrudeOilPriceIn)' name='federated.1p3umxy1j7arc11e85dwi0nh65u4' />
          </datasources>
          <datasource-dependencies datasource='federated.13v8wgc0pe7nk917gw17i0dp6xxy'>
            <column datatype='string' name='[Metro]' role='dimension' type='nominal' />
            <column datatype='real' name='[Price Reduction]' role='measure' type='quantitative' />
            <column-instance column='[Price Reduction]' derivation='Avg' name='[avg:Price Reduction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metro]' derivation='None' name='[none:Metro:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1p3umxy1j7arc11e85dwi0nh65u4'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk] + [federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk])</rows>
        <cols>([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk] / [federated.1p3umxy1j7arc11e85dwi0nh65u4].[yr:Date:ok])</cols>
      </table>
      <simple-id uuid='{FBCC9371-F61E-4D91-9297-030510A0B8FF}' />
    </worksheet>
    <worksheet name='PCvsCRLRegion'>
      <table>
        <view>
          <datasources>
            <datasource caption='SA-HOU' name='federated.13v8wgc0pe7nk917gw17i0dp6xxy' />
            <datasource caption='Sheet1 (CrudeOilPriceIn)' name='federated.1p3umxy1j7arc11e85dwi0nh65u4' />
          </datasources>
          <datasource-dependencies datasource='federated.13v8wgc0pe7nk917gw17i0dp6xxy'>
            <column datatype='string' name='[Metro]' role='dimension' type='nominal' />
            <column datatype='real' name='[Price Reduction]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price Reduction]' derivation='Avg' name='[avg:Price Reduction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metro]' derivation='None' name='[none:Metro:nk]' pivot='key' type='nominal' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1p3umxy1j7arc11e85dwi0nh65u4'>
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='500' />
                <format attr='maxwidth' value='500' />
                <format attr='minheight' value='549' />
                <format attr='maxheight' value='549' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk] + [federated.1p3umxy1j7arc11e85dwi0nh65u4].[avg:Price:qk])</rows>
        <cols>(([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk] / [federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]) * [federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{73FAB436-C255-4313-AD13-B611DADE280E}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='1Bedroom_MRP' name='federated.03dci8m1lrytms1e8pwpr0mq0k57' />
            <datasource caption='2Bedroom_MRP' name='federated.03qeqvm1j1sp9u16y9qw00xt5v9u' />
          </datasources>
          <datasource-dependencies datasource='federated.03dci8m1lrytms1e8pwpr0mq0k57'>
            <column datatype='real' name='[1BValues]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column caption='Year Month' datatype='string' name='[YearMonth]' role='dimension' type='nominal' />
            <column-instance column='[1BValues]' derivation='Avg' name='[avg:1BValues:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[YearMonth]' derivation='None' name='[none:YearMonth:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.03qeqvm1j1sp9u16y9qw00xt5v9u'>
            <column datatype='real' name='[2BValues]' role='measure' type='quantitative' />
            <column-instance column='[2BValues]' derivation='Avg' name='[avg:2BValues:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03qeqvm1j1sp9u16y9qw00xt5v9u].[avg:2BValues:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.03dci8m1lrytms1e8pwpr0mq0k57].[avg:1BValues:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03dci8m1lrytms1e8pwpr0mq0k57].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03dci8m1lrytms1e8pwpr0mq0k57].[avg:1BValues:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03dci8m1lrytms1e8pwpr0mq0k57].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03qeqvm1j1sp9u16y9qw00xt5v9u].[avg:2BValues:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03dci8m1lrytms1e8pwpr0mq0k57].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.03dci8m1lrytms1e8pwpr0mq0k57].[avg:1BValues:qk] + [federated.03qeqvm1j1sp9u16y9qw00xt5v9u].[avg:2BValues:qk])</rows>
        <cols>([federated.03dci8m1lrytms1e8pwpr0mq0k57].[none:RegionName:nk] / [federated.03dci8m1lrytms1e8pwpr0mq0k57].[none:YearMonth:nk])</cols>
      </table>
      <simple-id uuid='{E30B1F93-606D-4AC4-A292-86347E902F3B}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{72017846-406C-42CB-B07E-BD0C8D233806}' />
    </worksheet>
    <worksheet name='Sheet 20'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{543B4661-32D4-4A99-AC59-88FAC43BE90B}' />
    </worksheet>
    <worksheet name='cutegraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='SA-HOU' name='federated.13v8wgc0pe7nk917gw17i0dp6xxy' />
          </datasources>
          <datasource-dependencies datasource='federated.13v8wgc0pe7nk917gw17i0dp6xxy'>
            <column datatype='string' name='[Metro]' role='dimension' type='nominal' />
            <column datatype='real' name='[Price Reduction]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Price Reduction]' derivation='Avg' name='[avg:Price Reduction:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Metro]' derivation='None' name='[none:Metro:nk]' pivot='key' type='nominal' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]'>
            <groupfilter function='level-members' level='[none:Metro:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]'>
            <groupfilter function='level-members' level='[none:RegionName:nk]' />
          </filter>
          <slices>
            <column>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]</column>
            <column>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]' value='false' />
            <format attr='break-on-special' field='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]' />
              <text column='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]</rows>
        <cols>([federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk] * [federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk])</cols>
      </table>
      <simple-id uuid='{4D1E944B-A475-49CF-BF2B-DBE6C2EAB997}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='193'>
    <window class='worksheet' name='cutegraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[avg:Price Reduction:qk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:YearAndMonth:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDC3F61A-FA14-41CC-9E5F-16FBCD9D09C8}' />
    </window>
    <window class='worksheet' name='PCvsAPR'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]' type='filter' />
            <card param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.027ai2e07k0alt1b5llqv1to2sxj].[yr:date:ok]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]</field>
            <field>[federated.1yerw081sv9hua1d1eyvg074dmxp].[none:Metro:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DECB286E-F235-41CE-A817-5DEB5F931A53}' />
    </window>
    <window class='worksheet' name='PCvsCRL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]</field>
            <field>[federated.1p3umxy1j7arc11e85dwi0nh65u4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24C7E2FE-1174-4F25-A905-DE10FC5A5C6A}' />
    </window>
    <window class='worksheet' name='PCvsCRLRegion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]</field>
            <field>[federated.1p3umxy1j7arc11e85dwi0nh65u4].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19E457A7-46FD-4E5D-A588-8ED7B3213067}' />
    </window>
    <window class='worksheet' maximized='true' name='PCvsAPRRegion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Metro:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:RegionName:nk]</field>
            <field>[federated.13v8wgc0pe7nk917gw17i0dp6xxy].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{866A9536-6FCA-49DF-A2D6-A553C4768123}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.03dci8m1lrytms1e8pwpr0mq0k57].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03dci8m1lrytms1e8pwpr0mq0k57].[none:RegionName:nk]</field>
            <field>[federated.03dci8m1lrytms1e8pwpr0mq0k57].[none:YearMonth:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9D59064-4C7D-40A8-8B3A-6C61815F87F6}' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F4DCEBBA-4D01-45EA-AB2A-0824472A1457}' />
    </window>
    <window class='worksheet' name='Sheet 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1D8B622F-F191-4385-A2BD-5DB2272E7C24}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='PCvsAPR' width='192'>
      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
      SArE/wexjkT5L8IFMQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PCvsAPRRegion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PCvsCRL' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PCvsCRLRegion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 19' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 20' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='cutegraph' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
